services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:studiogori2024@db:5432/studio_gori_app
      - OLLAMA_ENDPOINT=http://ollama:11434
      - CLIENT_URL=https://vps-3dee2600.vps.ovh.net
      - API_URL=https://vps-3dee2600.vps.ovh.net/api
      - CORS_ORIGIN=https://vps-3dee2600.vps.ovh.net
      - JWT_SECRET=your_super_secret_jwt_key_change_in_production
      - JWT_REFRESH_SECRET=your_super_secret_refresh_key_change_in_production
      - WHATSAPP_SESSION_PATH=/app/data/whatsapp_session
      - UPLOAD_PATH=/app/data/uploads
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - ollama
      - redis
    volumes:
      - app_data:/app/data
      - ./backend/src:/app/backend/src:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`vps-3dee2600.vps.ovh.net`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.middlewares=redirect-to-https"
      - "traefik.http.routers.api-secure.rule=Host(`vps-3dee2600.vps.ovh.net`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api-secure.entrypoints=websecure"
      - "traefik.http.routers.api-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.api-secure.service=api"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
    restart: unless-stopped
    networks:
      - studio_gori_network

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: studio_gori_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: studiogori2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - studio_gori_network

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
    networks:
      - studio_gori_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - studio_gori_network
    command: redis-server --appendonly yes

  traefik:
    image: traefik:v3.2
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=admin@studio-gori.com
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - studio_gori_network

  frontend:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro 
    depends_on:
      - app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`vps-3dee2600.vps.ovh.net`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.frontend-secure.rule=Host(`vps-3dee2600.vps.ovh.net`)"
      - "traefik.http.routers.frontend-secure.entrypoints=websecure"
      - "traefik.http.routers.frontend-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.frontend-secure.service=frontend"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    restart: unless-stopped
    networks:
      - studio_gori_network

volumes:
  postgres_data:
  ollama_data:
  redis_data:
  app_data:

networks:
  studio_gori_network:
    driver: bridge
